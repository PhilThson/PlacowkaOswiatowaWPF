<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewmodels="clr-namespace:PlacowkaOswiatowa.ViewModels;assembly=PlacowkaOswiatowa.ViewModels"
                    xmlns:views="clr-namespace:PlacowkaOswiatowa.Views"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    >

    <!--Łączenie View z ViewModel zakładek-->

    <DataTemplate DataType="{x:Type viewmodels:UrlopPracownikaViewModel}">
        <views:UrlopPracownikaView/>
    </DataTemplate>

    <!--<DataTemplate DataType="{x:Type viewmodels:NowyTowarViewModel}">
        <views:NowyTowarView/>
    </DataTemplate>-->

    <DataTemplate DataType="{x:Type viewmodels:NowaFakturaViewModel}">
        <views:NowaFakturaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WszystkieFakturyViewModel}">
        <views:WszystkieFakturyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:NowyPracownikViewModel}">
        <views:NowyPracownikView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WszyscyPracownicyViewModel}">
        <views:WszyscyPracownicyView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:NowyUczenViewModel}">
        <views:NowyUczenView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:LoginViewModel}">
        <views:LoginView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WszyscyUczniowieViewModel}">
        <views:WszyscyUczniowieView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:ZarobkiPracownikaViewModel}">
        <views:ZarobkiPracownikaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WszystkieAdresyViewModel}">
        <views:WszystkieAdresyView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WszystkiePrzedmiotyViewModel}">
        <views:WszystkiePrzedmiotyView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WszystkieOcenyViewModel}">
        <views:WszystkieOcenyView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:WszystkieUrlopyViewModel}">
        <views:WszystkieUrlopyView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodels:NowaUmowaViewModel}">
        <views:NowaUmowaView />
    </DataTemplate>
    <!--tu jest koniec łączenia View z ViewModel zakładek-->

    <LinearGradientBrush x:Key="ScreenGradient"
                StartPoint="0.5,0.5"
                EndPoint="0.5,1">
        <GradientStop Color="DarkGray"
                      Offset="0" />
        <GradientStop Color="Gray"
                      Offset="1" />
    </LinearGradientBrush>

    <Style TargetType="Border"
         x:Key="screenBorder">
        <Setter Property="Background"
            Value="{StaticResource ScreenBackgroundBrush}" />
        <Setter Property="BorderBrush"
            Value="#FF5F5F5F" />
        <Setter Property="CornerRadius"
            Value="10" />
        <Setter Property="BorderThickness"
            Value="1" />
        <Setter Property="Padding"
            Value="12" />
        <Setter Property="Margin"
            Value="16" />
    </Style>

    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background"
            Value="{StaticResource ScreenBackgroundBrush}" />
        <!--<Setter Property="Background" Value="LightSteelBlue" />-->
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="CornerRadius" Value="5"/>
    </Style>


    <Style x:Key="MainButtonZaokraglony" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Padding="5" BorderBrush="LightBlue" BorderThickness="1" CornerRadius="5" Background="#EFEFEF">
                        <TextBlock Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainButtonStandardowy" TargetType="{x:Type Button}" BasedOn="{StaticResource MainButtonZaokraglony}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!--<Border 
            Background="Blue" 
            BorderBrush="Black" 
            BorderThickness="1" 
            CornerRadius="5"
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>-->
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <!--<ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />-->
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="0,10">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button
                        Style="{StaticResource ButtonKomend}"
                        Content="{Binding Path=DisplayName}" 
                        Command="{Binding Path=Command}" 
                        />
                        <!--Margin="4" 
                        Background="Aqua" 
                        BorderThickness="1"--> 
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
              IsSynchronizedWithCurrentItem="True" 
              ItemsSource="{Binding}" 
              Margin="4"
              Style="{StaticResource WorkspaceTabControl}"
            >
              <!--ItemTemplate="{StaticResource ClosableTabItemTemplate}"-->

            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TabItem Style="{StaticResource WorkspaceTabItem}"/>
                </DataTemplate>
            </TabControl.ItemTemplate>

        </TabControl>
    </DataTemplate>

    <Style x:Key="MainMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Padding" Value="2"/>
    </Style>

</ResourceDictionary>